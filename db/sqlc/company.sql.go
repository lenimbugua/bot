// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: company.sql

package db

import (
	"context"
)

const createCompany = `-- name: CreateCompany :one
INSERT INTO companies (
    phone,
    name,
    email
) VALUES (
    $1, $2, $3
) RETURNING id, phone, name, email
`

type CreateCompanyParams struct {
	Phone string `json:"phone"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

func (q *Queries) CreateCompany(ctx context.Context, arg CreateCompanyParams) (Company, error) {
	row := q.db.QueryRowContext(ctx, createCompany, arg.Phone, arg.Name, arg.Email)
	var i Company
	err := row.Scan(
		&i.ID,
		&i.Phone,
		&i.Name,
		&i.Email,
	)
	return i, err
}

const getCompany = `-- name: GetCompany :one
SELECT id, phone, name, email FROM companies
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetCompany(ctx context.Context, email string) (Company, error) {
	row := q.db.QueryRowContext(ctx, getCompany, email)
	var i Company
	err := row.Scan(
		&i.ID,
		&i.Phone,
		&i.Name,
		&i.Email,
	)
	return i, err
}
