// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: question.sql

package db

import (
	"context"
	"time"
)

const createQuestion = `-- name: CreateQuestion :one
INSERT INTO questions (
    question,
    type, 
    parent_id, 
    bot_id, 
    next_question_id, 
    updated_at 
) VALUES (
    $1,$2,$3,$4,$5,$6
) RETURNING id, question, bot_id, type, parent_id, next_question_id, created_at, updated_at
`

type CreateQuestionParams struct {
	Question       string    `json:"question"`
	Type           string    `json:"type"`
	ParentID       int64     `json:"parent_id"`
	BotID          int64     `json:"bot_id"`
	NextQuestionID int64     `json:"next_question_id"`
	UpdatedAt      time.Time `json:"updated_at"`
}

func (q *Queries) CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error) {
	row := q.db.QueryRowContext(ctx, createQuestion,
		arg.Question,
		arg.Type,
		arg.ParentID,
		arg.BotID,
		arg.NextQuestionID,
		arg.UpdatedAt,
	)
	var i Question
	err := row.Scan(
		&i.ID,
		&i.Question,
		&i.BotID,
		&i.Type,
		&i.ParentID,
		&i.NextQuestionID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
